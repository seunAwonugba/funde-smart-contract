{
  "address": "0x564d3f8C4Ef91fe63c98c1Ff6A94EB127628AB3F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__UnAuthorized",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "amountSent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdrawal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6949e7cef56c6ee9266478ed8c501071dc15a9df242781b95c706aa78c716fb7",
  "receipt": {
    "to": null,
    "from": "0x034C89C4fb414a7545422908F4baF6Be58F5360d",
    "contractAddress": "0x564d3f8C4Ef91fe63c98c1Ff6A94EB127628AB3F",
    "transactionIndex": 65,
    "gasUsed": "961232",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x6117b4d64aad86014b0fde56c690de81efc59567f9392bf6364c04b6103a4e9c",
    "transactionHash": "0x6949e7cef56c6ee9266478ed8c501071dc15a9df242781b95c706aa78c716fb7",
    "logs": [],
    "blockNumber": 6237875,
    "cumulativeGasUsed": "11261447",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "5f231fbc0f297a133861017035d292e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__UnAuthorized\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"contracts/PriceConverter.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nerror FundMe__UnAuthorized();\\r\\n\\r\\ncontract FundMe {\\r\\n    uint public constant minUSD = 5 * 1e18;\\r\\n    address public owner;\\r\\n    // using PriceConverter for uint256;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != owner) {\\r\\n            revert FundMe__UnAuthorized();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //ket track of eveyone that sent money , store their address in funders array\\r\\n    address[] public s_funders;\\r\\n\\r\\n    mapping(address => uint) public amountSent;\\r\\n\\r\\n    function fund() public payable {\\r\\n        //set min fund value in USD\\r\\n\\r\\n        // require(getConversionRate(msg.value) >= minUSD, \\\"Insufficient funds\\\");\\r\\n\\r\\n        require(\\r\\n            PriceConverter.getConversionRate(msg.value, priceFeed) >= minUSD,\\r\\n            \\\"Insufficient funds\\\"\\r\\n        );\\r\\n        s_funders.push(msg.sender);\\r\\n\\r\\n        //set the mapping value\\r\\n        amountSent[msg.sender] = msg.value;\\r\\n\\r\\n        //0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        // require(owner == msg.sender, \\\"Only owners can withdraw\\\");\\r\\n        for (uint i = 0; i < s_funders.length; i++) {\\r\\n            address fundersAddress = s_funders[i];\\r\\n            amountSent[fundersAddress] = 0;\\r\\n        }\\r\\n\\r\\n        //reset funders array\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        //withdraw the money to the person calling this function\\r\\n        //3 ways to transfer\\r\\n\\r\\n        // 1. Using transfer method\\r\\n\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n\\r\\n        // // 2. Using send method\\r\\n\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send not successful\\\");\\r\\n\\r\\n        // 2. Using call method\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: (address(this).balance)\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdrawal() public payable onlyOwner {\\r\\n        address[] memory m_funders = s_funders;\\r\\n        for (uint i = 0; i < m_funders.length; i++) {\\r\\n            address fundersAddress = m_funders[i];\\r\\n            amountSent[fundersAddress] = 0;\\r\\n        }\\r\\n\\r\\n        m_funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: (address(this).balance)\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x72fedd66706c76211a5c5903a830f70ec43b78bdc3a69f572457d3b0d12260b8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    //get price of eth in USD using an oracle to help communicate with external world\\r\\n\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return uint(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    // get price always return lates price of 1eth to dolls\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint _ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint) {\\r\\n        uint ethPrice = getPrice(priceFeed);\\r\\n        uint ethAmountInUSD = (ethPrice * _ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfa43568ce78cd219d08900bc4fc014d79b2cf8ba8228eb421062110c848e2120\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200110438038062001104833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b610f99806200016b6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a146101335780638da5cb5b1461015e578063b60d428814610189578063dc992aa0146101935761008e565b806322dbfd4b146100985780633ccfd60b146100d557806354861af7146100ec578063582b1034146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a27565b6102dd565b6040516100cc9190610a6d565b60405180910390f35b3480156100e157600080fd5b506100ea6102f5565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610ab4565b610530565b6040516101209190610af0565b60405180910390f35b61013161056f565b005b34801561013f57600080fd5b506101486107fa565b6040516101559190610b6a565b60405180910390f35b34801561016a57600080fd5b50610173610820565b6040516101809190610af0565b60405180910390f35b6101916101be565b005b34801561019f57600080fd5b506101a8610844565b6040516101b59190610a6d565b60405180910390f35b674563918244f400006101f334600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610850565b1015610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610be2565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037a576040517f317aeb7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600280549050811015610420576000600282815481106103a05761039f610c02565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061037d565b50600067ffffffffffffffff81111561043c5761043b610c31565b5b60405190808252806020026020018201604052801561046a5781602001602082028036833780820191505090505b506002908051906020019061048092919061091d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a790610c91565b60006040518083038185875af1925050503d80600081146104e4576040519150601f19603f3d011682016040523d82523d6000602084013e6104e9565b606091505b505090508061052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610cf2565b60405180910390fd5b50565b6002818154811061054057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f4576040517f317aeb7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600280548060200260200160405190810160405280929190818152602001828054801561067857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161062e575b5050505050905060005b81518110156106fd5760008282815181106106a05761069f610c02565b5b602002602001015190506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610682565b50600067ffffffffffffffff81111561071957610718610c31565b5b6040519080825280602002602001820160405280156107475781602001602082028036833780820191505090505b50905060003373ffffffffffffffffffffffffffffffffffffffff164760405161077090610c91565b60006040518083038185875af1925050503d80600081146107ad576040519150601f19603f3d011682016040523d82523d6000602084013e6107b2565b606091505b50509050806107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90610cf2565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b674563918244f4000081565b60008061085c8361088c565b90506000670de0b6b3a764000085836108759190610d41565b61087f9190610db2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610e70565b5050509150506402540be400816109159190610eeb565b915050919050565b828054828255906000526020600020908101928215610996579160200282015b828111156109955782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061093d565b5b5090506109a391906109a7565b5090565b5b808211156109c05760008160009055506001016109a8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f4826109c9565b9050919050565b610a04816109e9565b8114610a0f57600080fd5b50565b600081359050610a21816109fb565b92915050565b600060208284031215610a3d57610a3c6109c4565b5b6000610a4b84828501610a12565b91505092915050565b6000819050919050565b610a6781610a54565b82525050565b6000602082019050610a826000830184610a5e565b92915050565b610a9181610a54565b8114610a9c57600080fd5b50565b600081359050610aae81610a88565b92915050565b600060208284031215610aca57610ac96109c4565b5b6000610ad884828501610a9f565b91505092915050565b610aea816109e9565b82525050565b6000602082019050610b056000830184610ae1565b92915050565b6000819050919050565b6000610b30610b2b610b26846109c9565b610b0b565b6109c9565b9050919050565b6000610b4282610b15565b9050919050565b6000610b5482610b37565b9050919050565b610b6481610b49565b82525050565b6000602082019050610b7f6000830184610b5b565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000610bcc601283610b85565b9150610bd782610b96565b602082019050919050565b60006020820190508181036000830152610bfb81610bbf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c7b600083610c60565b9150610c8682610c6b565b600082019050919050565b6000610c9c82610c6e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cdc600b83610b85565b9150610ce782610ca6565b602082019050919050565b60006020820190508181036000830152610d0b81610ccf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4c82610a54565b9150610d5783610a54565b9250828202610d6581610a54565b91508282048414831517610d7c57610d7b610d12565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dbd82610a54565b9150610dc883610a54565b925082610dd857610dd7610d83565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e0281610de3565b8114610e0d57600080fd5b50565b600081519050610e1f81610df9565b92915050565b6000819050919050565b610e3881610e25565b8114610e4357600080fd5b50565b600081519050610e5581610e2f565b92915050565b600081519050610e6a81610a88565b92915050565b600080600080600060a08688031215610e8c57610e8b6109c4565b5b6000610e9a88828901610e10565b9550506020610eab88828901610e46565b9450506040610ebc88828901610e5b565b9350506060610ecd88828901610e5b565b9250506080610ede88828901610e10565b9150509295509295909350565b6000610ef682610e25565b9150610f0183610e25565b9250828202610f0f81610e25565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f4757610f46610d12565b5b8282058414831517610f5c57610f5b610d12565b5b509291505056fea2646970667358221220697895b9366872e2b4669888f80ac60c106d3c46e0e2f7695e4d1b20ff63072964736f6c63430008180033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a146101335780638da5cb5b1461015e578063b60d428814610189578063dc992aa0146101935761008e565b806322dbfd4b146100985780633ccfd60b146100d557806354861af7146100ec578063582b1034146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a27565b6102dd565b6040516100cc9190610a6d565b60405180910390f35b3480156100e157600080fd5b506100ea6102f5565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610ab4565b610530565b6040516101209190610af0565b60405180910390f35b61013161056f565b005b34801561013f57600080fd5b506101486107fa565b6040516101559190610b6a565b60405180910390f35b34801561016a57600080fd5b50610173610820565b6040516101809190610af0565b60405180910390f35b6101916101be565b005b34801561019f57600080fd5b506101a8610844565b6040516101b59190610a6d565b60405180910390f35b674563918244f400006101f334600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610850565b1015610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610be2565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037a576040517f317aeb7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600280549050811015610420576000600282815481106103a05761039f610c02565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061037d565b50600067ffffffffffffffff81111561043c5761043b610c31565b5b60405190808252806020026020018201604052801561046a5781602001602082028036833780820191505090505b506002908051906020019061048092919061091d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a790610c91565b60006040518083038185875af1925050503d80600081146104e4576040519150601f19603f3d011682016040523d82523d6000602084013e6104e9565b606091505b505090508061052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610cf2565b60405180910390fd5b50565b6002818154811061054057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f4576040517f317aeb7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600280548060200260200160405190810160405280929190818152602001828054801561067857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161062e575b5050505050905060005b81518110156106fd5760008282815181106106a05761069f610c02565b5b602002602001015190506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610682565b50600067ffffffffffffffff81111561071957610718610c31565b5b6040519080825280602002602001820160405280156107475781602001602082028036833780820191505090505b50905060003373ffffffffffffffffffffffffffffffffffffffff164760405161077090610c91565b60006040518083038185875af1925050503d80600081146107ad576040519150601f19603f3d011682016040523d82523d6000602084013e6107b2565b606091505b50509050806107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90610cf2565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b674563918244f4000081565b60008061085c8361088c565b90506000670de0b6b3a764000085836108759190610d41565b61087f9190610db2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610e70565b5050509150506402540be400816109159190610eeb565b915050919050565b828054828255906000526020600020908101928215610996579160200282015b828111156109955782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061093d565b5b5090506109a391906109a7565b5090565b5b808211156109c05760008160009055506001016109a8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f4826109c9565b9050919050565b610a04816109e9565b8114610a0f57600080fd5b50565b600081359050610a21816109fb565b92915050565b600060208284031215610a3d57610a3c6109c4565b5b6000610a4b84828501610a12565b91505092915050565b6000819050919050565b610a6781610a54565b82525050565b6000602082019050610a826000830184610a5e565b92915050565b610a9181610a54565b8114610a9c57600080fd5b50565b600081359050610aae81610a88565b92915050565b600060208284031215610aca57610ac96109c4565b5b6000610ad884828501610a9f565b91505092915050565b610aea816109e9565b82525050565b6000602082019050610b056000830184610ae1565b92915050565b6000819050919050565b6000610b30610b2b610b26846109c9565b610b0b565b6109c9565b9050919050565b6000610b4282610b15565b9050919050565b6000610b5482610b37565b9050919050565b610b6481610b49565b82525050565b6000602082019050610b7f6000830184610b5b565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000610bcc601283610b85565b9150610bd782610b96565b602082019050919050565b60006020820190508181036000830152610bfb81610bbf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c7b600083610c60565b9150610c8682610c6b565b600082019050919050565b6000610c9c82610c6e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cdc600b83610b85565b9150610ce782610ca6565b602082019050919050565b60006020820190508181036000830152610d0b81610ccf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4c82610a54565b9150610d5783610a54565b9250828202610d6581610a54565b91508282048414831517610d7c57610d7b610d12565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dbd82610a54565b9150610dc883610a54565b925082610dd857610dd7610d83565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e0281610de3565b8114610e0d57600080fd5b50565b600081519050610e1f81610df9565b92915050565b6000819050919050565b610e3881610e25565b8114610e4357600080fd5b50565b600081519050610e5581610e2f565b92915050565b600081519050610e6a81610a88565b92915050565b600080600080600060a08688031215610e8c57610e8b6109c4565b5b6000610e9a88828901610e10565b9550506020610eab88828901610e46565b9450506040610ebc88828901610e5b565b9350506060610ecd88828901610e5b565b9250506080610ede88828901610e10565b9150509295509295909350565b6000610ef682610e25565b9150610f0183610e25565b9250828202610f0f81610e25565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f4757610f46610d12565b5b8282058414831517610f5c57610f5b610d12565b5b509291505056fea2646970667358221220697895b9366872e2b4669888f80ac60c106d3c46e0e2f7695e4d1b20ff63072964736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 323,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 326,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)104"
      },
      {
        "astId": 359,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 363,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "amountSent",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}