{
  "address": "0x2A601047609E7214a29efFe952ca885a9476AE5D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "UnAuthorized",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "amountSent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x59b35efb47a100516b4d57e2bebce8bcc3a8848e03d7c2bcf0a50680619225ba",
  "receipt": {
    "to": null,
    "from": "0x034C89C4fb414a7545422908F4baF6Be58F5360d",
    "contractAddress": "0x2A601047609E7214a29efFe952ca885a9476AE5D",
    "transactionIndex": 41,
    "gasUsed": "881187",
    "logsBloom": "0x
    "blockHash": "0x6144bc45851456075b5a6bc08967a4335d2e70ef2270d412b468489f0b4cfa68",
    "transactionHash": "0x59b35efb47a100516b4d57e2bebce8bcc3a8848e03d7c2bcf0a50680619225ba",
    "logs": [],
    "blockNumber": 6206195,
    "cumulativeGasUsed": "5403080",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "b95acd3cca0c88c8336cfb6e54d1aba1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"UnAuthorized\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"contracts/PriceConverter.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nerror UnAuthorized();\\r\\n\\r\\ncontract FundMe {\\r\\n    uint public constant minUSD = 5 * 1e18;\\r\\n    address public owner;\\r\\n    // using PriceConverter for uint256;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != owner) {\\r\\n            revert UnAuthorized();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //ket track of eveyone that sent money , store their address in funders array\\r\\n    address[] public funders;\\r\\n\\r\\n    mapping(address => uint) public amountSent;\\r\\n\\r\\n    function fund() public payable {\\r\\n        //set min fund value in USD\\r\\n\\r\\n        // require(getConversionRate(msg.value) >= minUSD, \\\"Insufficient funds\\\");\\r\\n\\r\\n        require(\\r\\n            PriceConverter.getConversionRate(msg.value, priceFeed) >= minUSD,\\r\\n            \\\"Insufficient funds\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n\\r\\n        //set the mapping value\\r\\n        amountSent[msg.sender] = msg.value;\\r\\n\\r\\n        //0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        // require(owner == msg.sender, \\\"Only owners can withdraw\\\");\\r\\n        for (uint i = 0; i < funders.length; i++) {\\r\\n            address fundersAddress = funders[i];\\r\\n            amountSent[fundersAddress] = 0;\\r\\n        }\\r\\n\\r\\n        funders = new address[](0);\\r\\n\\r\\n        //withdraw the money to the person calling this function\\r\\n        //3 ways to transfer\\r\\n\\r\\n        // 1. Using transfer method\\r\\n\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n\\r\\n        // 2. Using send method\\r\\n\\r\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        require(sendSuccess, \\\"Send not successful\\\");\\r\\n\\r\\n        // 2. Using call method\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: (address(this).balance)\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x93c6148b7b2ea11a2fc8dd75acc0986b3c1313efb781542b096a172aba861c60\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    //get price of eth in USD using an oracle to help communicate with external world\\r\\n\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return uint(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    // get price always return lates price of 1eth to dolls\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint _ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint) {\\r\\n        uint ethPrice = getPrice(priceFeed);\\r\\n        uint ethAmountInUSD = (ethPrice * _ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfa43568ce78cd219d08900bc4fc014d79b2cf8ba8228eb421062110c848e2120\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f7e380380610f7e8339818101604052810190610032919061011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610e26806101586000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b806322dbfd4b1461008d5780633ccfd60b146100ca578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610848565b6102c8565b6040516100c1919061088e565b60405180910390f35b3480156100d657600080fd5b506100df6102e0565b005b3480156100ed57600080fd5b506100f66105dc565b6040516101039190610908565b60405180910390f35b34801561011857600080fd5b50610121610602565b60405161012e9190610932565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061016860048036038101906101639190610979565b610626565b6040516101759190610932565b60405180910390f35b34801561018a57600080fd5b50610193610665565b6040516101a0919061088e565b60405180910390f35b674563918244f400006101de34600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610671565b101561021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610a03565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610365576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561040b5760006002828154811061038b5761038a610a23565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610368565b50600067ffffffffffffffff81111561042757610426610a52565b5b6040519080825280602002602001820160405280156104555781602001602082028036833780820191505090505b506002908051906020019061046b92919061073e565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104b2573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505090508061052c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052390610acd565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161055290610b1e565b60006040518083038185875af1925050503d806000811461058f576040519150601f19603f3d011682016040523d82523d6000602084013e610594565b606091505b50509050806105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90610b7f565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061063657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b674563918244f4000081565b60008061067d836106ad565b90506000670de0b6b3a764000085836106969190610bce565b6106a09190610c3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f9190610cfd565b5050509150506402540be400816107369190610d78565b915050919050565b8280548282559060005260206000209081019282156107b7579160200282015b828111156107b65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075e565b5b5090506107c491906107c8565b5090565b5b808211156107e15760008160009055506001016107c9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610815826107ea565b9050919050565b6108258161080a565b811461083057600080fd5b50565b6000813590506108428161081c565b92915050565b60006020828403121561085e5761085d6107e5565b5b600061086c84828501610833565b91505092915050565b6000819050919050565b61088881610875565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6000819050919050565b60006108ce6108c96108c4846107ea565b6108a9565b6107ea565b9050919050565b60006108e0826108b3565b9050919050565b60006108f2826108d5565b9050919050565b610902816108e7565b82525050565b600060208201905061091d60008301846108f9565b92915050565b61092c8161080a565b82525050565b60006020820190506109476000830184610923565b92915050565b61095681610875565b811461096157600080fd5b50565b6000813590506109738161094d565b92915050565b60006020828403121561098f5761098e6107e5565b5b600061099d84828501610964565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006109ed6012836109a6565b91506109f8826109b7565b602082019050919050565b60006020820190508181036000830152610a1c816109e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206e6f74207375636365737366756c00000000000000000000000000600082015250565b6000610ab76013836109a6565b9150610ac282610a81565b602082019050919050565b60006020820190508181036000830152610ae681610aaa565b9050919050565b600081905092915050565b50565b6000610b08600083610aed565b9150610b1382610af8565b600082019050919050565b6000610b2982610afb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b69600b836109a6565b9150610b7482610b33565b602082019050919050565b60006020820190508181036000830152610b9881610b5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd982610875565b9150610be483610875565b9250828202610bf281610875565b91508282048414831517610c0957610c08610b9f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4a82610875565b9150610c5583610875565b925082610c6557610c64610c10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8f81610c70565b8114610c9a57600080fd5b50565b600081519050610cac81610c86565b92915050565b6000819050919050565b610cc581610cb2565b8114610cd057600080fd5b50565b600081519050610ce281610cbc565b92915050565b600081519050610cf78161094d565b92915050565b600080600080600060a08688031215610d1957610d186107e5565b5b6000610d2788828901610c9d565b9550506020610d3888828901610cd3565b9450506040610d4988828901610ce8565b9350506060610d5a88828901610ce8565b9250506080610d6b88828901610c9d565b9150509295509295909350565b6000610d8382610cb2565b9150610d8e83610cb2565b9250828202610d9c81610cb2565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dd457610dd3610b9f565b5b8282058414831517610de957610de8610b9f565b5b509291505056fea2646970667358221220e4035fde421b8a25e147ea8471ba3da99f1382680ce163856df476a97f4bf68364736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b806322dbfd4b1461008d5780633ccfd60b146100ca578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610848565b6102c8565b6040516100c1919061088e565b60405180910390f35b3480156100d657600080fd5b506100df6102e0565b005b3480156100ed57600080fd5b506100f66105dc565b6040516101039190610908565b60405180910390f35b34801561011857600080fd5b50610121610602565b60405161012e9190610932565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061016860048036038101906101639190610979565b610626565b6040516101759190610932565b60405180910390f35b34801561018a57600080fd5b50610193610665565b6040516101a0919061088e565b60405180910390f35b674563918244f400006101de34600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610671565b101561021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610a03565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610365576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561040b5760006002828154811061038b5761038a610a23565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610368565b50600067ffffffffffffffff81111561042757610426610a52565b5b6040519080825280602002602001820160405280156104555781602001602082028036833780820191505090505b506002908051906020019061046b92919061073e565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104b2573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505090508061052c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052390610acd565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161055290610b1e565b60006040518083038185875af1925050503d806000811461058f576040519150601f19603f3d011682016040523d82523d6000602084013e610594565b606091505b50509050806105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90610b7f565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061063657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b674563918244f4000081565b60008061067d836106ad565b90506000670de0b6b3a764000085836106969190610bce565b6106a09190610c3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f9190610cfd565b5050509150506402540be400816107369190610d78565b915050919050565b8280548282559060005260206000209081019282156107b7579160200282015b828111156107b65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075e565b5b5090506107c491906107c8565b5090565b5b808211156107e15760008160009055506001016107c9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610815826107ea565b9050919050565b6108258161080a565b811461083057600080fd5b50565b6000813590506108428161081c565b92915050565b60006020828403121561085e5761085d6107e5565b5b600061086c84828501610833565b91505092915050565b6000819050919050565b61088881610875565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6000819050919050565b60006108ce6108c96108c4846107ea565b6108a9565b6107ea565b9050919050565b60006108e0826108b3565b9050919050565b60006108f2826108d5565b9050919050565b610902816108e7565b82525050565b600060208201905061091d60008301846108f9565b92915050565b61092c8161080a565b82525050565b60006020820190506109476000830184610923565b92915050565b61095681610875565b811461096157600080fd5b50565b6000813590506109738161094d565b92915050565b60006020828403121561098f5761098e6107e5565b5b600061099d84828501610964565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006109ed6012836109a6565b91506109f8826109b7565b602082019050919050565b60006020820190508181036000830152610a1c816109e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206e6f74207375636365737366756c00000000000000000000000000600082015250565b6000610ab76013836109a6565b9150610ac282610a81565b602082019050919050565b60006020820190508181036000830152610ae681610aaa565b9050919050565b600081905092915050565b50565b6000610b08600083610aed565b9150610b1382610af8565b600082019050919050565b6000610b2982610afb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b69600b836109a6565b9150610b7482610b33565b602082019050919050565b60006020820190508181036000830152610b9881610b5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd982610875565b9150610be483610875565b9250828202610bf281610875565b91508282048414831517610c0957610c08610b9f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4a82610875565b9150610c5583610875565b925082610c6557610c64610c10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8f81610c70565b8114610c9a57600080fd5b50565b600081519050610cac81610c86565b92915050565b6000819050919050565b610cc581610cb2565b8114610cd057600080fd5b50565b600081519050610ce281610cbc565b92915050565b600081519050610cf78161094d565b92915050565b600080600080600060a08688031215610d1957610d186107e5565b5b6000610d2788828901610c9d565b9550506020610d3888828901610cd3565b9450506040610d4988828901610ce8565b9350506060610d5a88828901610ce8565b9250506080610d6b88828901610c9d565b9150509295509295909350565b6000610d8382610cb2565b9150610d8e83610cb2565b9250828202610d9c81610cb2565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dd457610dd3610b9f565b5b8282058414831517610de957610de8610b9f565b5b509291505056fea2646970667358221220e4035fde421b8a25e147ea8471ba3da99f1382680ce163856df476a97f4bf68364736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 323,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 326,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)104"
      },
      {
        "astId": 359,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 363,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "amountSent",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}